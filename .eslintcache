[{"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/index.js":"1","/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/TaskList.js":"2","/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/Task.js":"3","/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/App.js":"4","/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/NewTaskForm.js":"5","/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/reportWebVitals.js":"6"},{"size":500,"mtime":1611787370941,"results":"7","hashOfConfig":"8"},{"size":602,"mtime":1611951831999,"results":"9","hashOfConfig":"8"},{"size":1084,"mtime":1611884258518,"results":"10","hashOfConfig":"8"},{"size":2392,"mtime":1611953443104,"results":"11","hashOfConfig":"8"},{"size":1461,"mtime":1611952509851,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1611787370944,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"167ag53",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/index.js",[],"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/TaskList.js",["27"],"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/Task.js",[],"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/App.js",["28"],"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/NewTaskForm.js",["29"],"import React, { useState } from 'react';\nimport './NewTaskForm.css';\n\n\nconst NewTaskForm = (props) => {\n\n    const [formFields, setFormFields] = useState({\n        title: '',\n        content: '',\n        complete: false\n    });\n\n\n    const onInputChange = (event) => {\n        console.log(`Content Field updated ${ event.target.value }`);\n    \n        const newFormFields = {\n            ...formFields,\n        }\n\n\n        newFormFields[event.target.name]=event.target.value\n        setFormFields(newFormFields);\n    };\n    \n    const onFormSubmit = (event) => {\n    // prevent the browser from trying to submit the form.\n    event.preventDefault();\n\n    props.addTaskCallback(formFields);\n    \n    // ... We need to add the student to the list.\n    setFormFields({\n        title: '',\n        content: '',\n        complete: false\n    });\n    };\n    \n\n  return (\n    <form className=\"new-task-form\" onSubmit={onFormSubmit} className=\"task\">\n      <div>\n        <label htmlFor=\"title\">Title:</label>\n        <input \n            name=\"title\"\n            onChange={onInputChange}\n            value={formFields.title} \n        />\n      </div>\n      <div>\n        <label htmlFor=\"content\">Content:</label>\n        <input \n            name=\"content\" \n            onChange={onInputChange}\n            value={formFields.content} \n        />\n      </div>\n      <input\n        type=\"submit\"\n        value=\"Add Task\"\n      />\n    </form>\n  );\n}\n\nexport default NewTaskForm;","/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/reportWebVitals.js",[],{"ruleId":"30","severity":1,"message":"31","line":1,"column":17,"nodeType":"32","messageId":"33","endLine":1,"endColumn":25},{"ruleId":"30","severity":1,"message":"34","line":7,"column":7,"nodeType":"32","messageId":"33","endLine":7,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":42,"column":61,"nodeType":"37","endLine":42,"endColumn":77},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'tasksData' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]