{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport NewTaskForm from './components/NewTaskForm';\nimport TaskList from './components/TaskList';\nconst tasksData = [{\n  title: \"Learn Flask\",\n  content: \"make an api\",\n  complete: false,\n  id: 1\n}, {\n  title: \"Review React\",\n  content: \"make a tasklist front end\",\n  complete: false,\n  id: 2\n}, {\n  title: \"Ada Build\",\n  content: \"make video lessons\",\n  complete: false,\n  id: 3\n}, {\n  title: \"Learn Flask\",\n  content: \"make an api\",\n  complete: false,\n  id: 4\n}, {\n  title: \"Review React\",\n  content: \"make a tasklist front end\",\n  complete: false,\n  id: 5\n}, {\n  title: \"Ada Build\",\n  content: \"make video lessons\",\n  complete: false,\n  id: 6\n}];\n\nfunction App() {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/tasks\").then(response => {\n      const apiTaskList = response.data;\n      setTaskList(apiTaskList);\n    }).catch(error => {\n      setErrorMessage(error.message);\n      console.log(error.message);\n    });\n  }, []);\n\n  const addTask = task => {\n    const newTaskList = [...taskList];\n    const nextId = Math.max(...newTaskList.map(task => task.id)) + 1;\n    newTaskList.push({\n      id: nextId,\n      title: task.title,\n      content: task.content,\n      complete: false\n    });\n    setTaskList(newTaskList);\n  };\n\n  const updateTask = updatedTask => {\n    const tasks = [];\n    taskList.forEach(task => {\n      if (task.id === updatedTask.id) {\n        console.log(updatedTask.title);\n        tasks.push(updatedTask);\n      } else {\n        tasks.push(task);\n      }\n    });\n    setTaskList(tasks);\n  };\n\n  const deleteTask = deletedTask => {\n    const tasks = [];\n    taskList.forEach(task => {\n      if (task.id !== deletedTask.id) {\n        tasks.push(task);\n      }\n    });\n    setTaskList(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n      addTaskCallback: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: taskList,\n      onUpdateTask: updateTask,\n      onDeleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"V/HibS7/p29J40czAjUipCO+awM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/App.js"],"names":["React","useState","useEffect","axios","NewTaskForm","TaskList","tasksData","title","content","complete","id","App","taskList","setTaskList","get","then","response","apiTaskList","data","catch","error","setErrorMessage","message","console","log","addTask","task","newTaskList","nextId","Math","max","map","push","updateTask","updatedTask","tasks","forEach","deleteTask","deletedTask"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport axios from 'axios';\nimport NewTaskForm from './components/NewTaskForm';\nimport TaskList from './components/TaskList'\n\nconst tasksData = [\n  {\n    title: \"Learn Flask\",\n    content: \"make an api\",\n    complete: false,\n    id: 1\n  },\n  {\n    title: \"Review React\",\n    content: \"make a tasklist front end\",\n    complete: false,\n    id: 2\n  },\n  {\n    title: \"Ada Build\",\n    content: \"make video lessons\",\n    complete: false,\n    id: 3\n  },\n  {\n    title: \"Learn Flask\",\n    content: \"make an api\",\n    complete: false,\n    id: 4\n  },\n  {\n    title: \"Review React\",\n    content: \"make a tasklist front end\",\n    complete: false,\n    id: 5\n  },\n  {\n    title: \"Ada Build\",\n    content: \"make video lessons\",\n    complete: false,\n    id: 6\n  },\n];\n\n\nfunction App() {\n  const [taskList, setTaskList] = useState([]);\n\n  useEffect(() =>{\n    axios.get(\"http://localhost:5000/tasks\")\n      .then((response) => {\n        const apiTaskList = response.data\n        setTaskList(apiTaskList)\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n        console.log(error.message);\n      });\n    }, []);\n\n  const addTask = (task) => {\n    const newTaskList = [...taskList];\n\n    const nextId = Math.max(...newTaskList.map(task => task.id)) + 1\n\n    newTaskList.push({\n      id: nextId,\n      title: task.title,\n      content: task.content,\n      complete: false,\n    });\n\n    setTaskList(newTaskList);\n  }\n\n  const updateTask = (updatedTask) => {\n    const tasks = [];\n\n    taskList.forEach((task) => {\n      \n      if (task.id === updatedTask.id) {\n        console.log(updatedTask.title)\n        tasks.push(updatedTask);\n      } else {\n        tasks.push(task);\n      }\n    });\n\n    setTaskList(tasks);\n  }\n\n  const deleteTask = (deletedTask) => {\n    const tasks = [];\n\n    taskList.forEach((task) => {\n      \n      if (task.id !== deletedTask.id) {\n        tasks.push(task);\n      }\n    });\n\n    setTaskList(tasks);\n  }\n\n  return (\n    <div className=\"App\">\n      <NewTaskForm addTaskCallback={addTask}/>\n      <TaskList \n        tasks={taskList} \n        onUpdateTask={updateTask}\n        onDeleteTask={deleteTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}