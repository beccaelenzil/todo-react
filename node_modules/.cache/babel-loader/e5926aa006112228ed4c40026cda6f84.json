{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/NewTaskForm.js\";\nimport React, { useState } from 'react';\nimport './NewTaskForm.css';\nconst [formFields, setFormFields] = useState({\n  title: '',\n  content: '',\n  complete: false\n});\ncon;\n\nconst NewTaskForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"new-task-form\",\n    onSubmit: onFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        onChange: onTitleChange,\n        value: formFields.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NewTaskForm;\nexport default NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/Users/becca/GitHub/learn_flask/todo-list-project/todo-react/src/components/NewTaskForm.js"],"names":["React","useState","formFields","setFormFields","title","content","complete","con","NewTaskForm","props","onFormSubmit","onTitleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BF,QAAQ,CAAC;AACzCG,EAAAA,KAAK,EAAE,EADkC;AAEzCC,EAAAA,OAAO,EAAE,EAFgC;AAGzCC,EAAAA,QAAQ,EAAE;AAH+B,CAAD,CAA5C;AAMAC,GAAG;;AAEH,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE7B,sBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,QAAQ,EAAEC,YAA1C;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,QAAQ,EAAEC,aAFd;AAGI,QAAA,KAAK,EAAET,UAAU,CAACE;AAHtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAaE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtBD;;KAAMI,W;AAwBN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport './NewTaskForm.css';\n\nconst [formFields, setFormFields] = useState({\n    title: '',\n    content: '',\n    complete: false\n});\n\ncon\n\nconst NewTaskForm = (props) => {\n\n  return (\n    <form className=\"new-task-form\" onSubmit={onFormSubmit}>\n      <div>\n        <label htmlFor=\"title\">Title:</label>\n        <input \n            name=\"title\"\n            onChange={onTitleChange}\n            value={formFields.title} \n        />\n      </div>\n      <div>\n        <label htmlFor=\"content\">Content:</label>\n        <input name=\"content\" />\n      </div>\n      <input\n        type=\"submit\"\n        value=\"Add Task\"\n      />\n    </form>\n  );\n}\n\nexport default NewTaskForm;"]},"metadata":{},"sourceType":"module"}